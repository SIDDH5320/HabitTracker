{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDHI KUMAR\\\\OneDrive\\\\Desktop\\\\Habit Trackker\\\\src\\\\Component\\\\HabitStatus.js\",\n  _s = $RefreshSig$();\n// to show weekly status of any habit from user's habit list \n\n// redux hooks\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// to navigate to a new route\nimport { NavLink } from \"react-router-dom\";\n\n// selector and action from habitReducer\nimport { habitSelector, setShowStatus } from \"../Redux/Reducer/habitReducer\";\n\n// component to show weekly status of any habit\nimport WeekStatus from \"./WeekStatus\";\n\n// to get list of all the days and dates in last week\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculateDayOfWeek = date => {\n  // array storing all the dates and day\n  var days = new Array();\n  // storing values in asceding order of date\n  for (var i = 6; i >= 0; i--) {\n    // store values in the form of string\n    days[6 - i] = new Date(date.getFullYear(), date.getMonth(), date.getDate() - i).toString();\n    days[6 - i] = `${days[6 - i].slice(0, 4)}, ${days[6 - i].slice(4, 15)}`;\n  }\n  // return the array of dates\n  return days;\n};\n\n// render the section\n_c = CalculateDayOfWeek;\nconst HabitStatus = () => {\n  _s();\n  // for calling an action from reducer\n  const dispatch = useDispatch();\n\n  // getting state variables from the habitReducer\n  const {\n    habits,\n    showStatus\n  } = useSelector(habitSelector);\n\n  // getting list of all week days and dates\n  const weekDays = CalculateDayOfWeek(new Date());\n\n  // for hiding the weekly status section from screen\n  const handleCloseClick = e => {\n    e.preventDefault();\n    // removing the value of selected item from variable on closing the section\n    dispatch(setShowStatus(null));\n  };\n\n  // render the section\n  return (\n    /*#__PURE__*/\n    // main container\n    _jsxDEV(\"div\", {\n      className: \"w-full md:w-2/3 h-full ml-1 flex flex-col p-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"w-full p-1\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-indigo-400 hover:bg-indigo-500 \\r float-right p-1 rounded text-white\",\n            children: \"New Habit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full mt-1 p-1 rounded flex flex-col bg-fixed overflow-scroll\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hidden md:block w-full\",\n          children: !showStatus ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center text-2xl text-indigo-600 font-semibold\",\n            children: habits.length !== 0 ?\n            // if list containes some items\n            'Select habit from list to know your weekly status' :\n            // incase the habit list is empty\n            'Add some habits to see your progress'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hidden md:block w-full \",\n          children:\n          // if user click on a habit\n          showStatus ?\n          /*#__PURE__*/\n          // show weekly status of task \n          // passing close section function, selected habit and week days as props\n          _jsxDEV(WeekStatus, {\n            handleCloseClick: handleCloseClick,\n            showStatus: showStatus,\n            weekDays: weekDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block md:hidden w-full h-full\",\n          children:\n          // if user's habit list is empty\n          habits.length === 0 ?\n          /*#__PURE__*/\n          // show following message\n          _jsxDEV(\"div\", {\n            className: \"w-full text-2xl text-center font-semibold text-indigo-600\",\n            children: \"'Nothing in Your List'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this) :\n          // if habit list contains some habits then render each one along with their weekly status\n          habits.map((habit, i) => /*#__PURE__*/_jsxDEV(WeekStatus, {\n            // index of habit in the array\n            habitIndex: i\n            // handle close function\n            ,\n            handleCloseClick: handleCloseClick\n            // habit to show info about\n            ,\n            showStatus: habit\n            // array of all the week days and date\n            ,\n            weekDays: weekDays\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 49\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n// export the component\n_s(HabitStatus, \"P82B80JWInBs80av560+AAUbFW8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = HabitStatus;\nexport default HabitStatus;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalculateDayOfWeek\");\n$RefreshReg$(_c2, \"HabitStatus\");","map":{"version":3,"names":["useDispatch","useSelector","NavLink","habitSelector","setShowStatus","WeekStatus","jsxDEV","_jsxDEV","CalculateDayOfWeek","date","days","Array","i","Date","getFullYear","getMonth","getDate","toString","slice","_c","HabitStatus","_s","dispatch","habits","showStatus","weekDays","handleCloseClick","e","preventDefault","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","length","map","habit","habitIndex","_c2","$RefreshReg$"],"sources":["C:/Users/SIDDHI KUMAR/OneDrive/Desktop/Habit Trackker/src/Component/HabitStatus.js"],"sourcesContent":["\r\n// to show weekly status of any habit from user's habit list \r\n\r\n// redux hooks\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// to navigate to a new route\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// selector and action from habitReducer\r\nimport { habitSelector, setShowStatus } from \"../Redux/Reducer/habitReducer\";\r\n\r\n// component to show weekly status of any habit\r\nimport WeekStatus from \"./WeekStatus\";\r\n\r\n\r\n// to get list of all the days and dates in last week\r\nconst CalculateDayOfWeek = (date) => {\r\n    // array storing all the dates and day\r\n    var days = new Array();\r\n    // storing values in asceding order of date\r\n    for (var i = 6; i >= 0; i--){\r\n        // store values in the form of string\r\n        days[6-i] = new Date(date.getFullYear(), date.getMonth(), date.getDate() - i).toString();\r\n        days[6-i] = `${days[6-i].slice(0,4)}, ${days[6-i].slice(4,15)}`;\r\n    }\r\n    // return the array of dates\r\n    return days;\r\n}\r\n\r\n\r\n\r\n// render the section\r\nconst HabitStatus = () => {\r\n    // for calling an action from reducer\r\n    const dispatch = useDispatch();\r\n\r\n    // getting state variables from the habitReducer\r\n    const { habits, showStatus } = useSelector(habitSelector);\r\n\r\n    // getting list of all week days and dates\r\n    const weekDays = CalculateDayOfWeek(new Date());\r\n\r\n    // for hiding the weekly status section from screen\r\n    const handleCloseClick = (e) => {\r\n        e.preventDefault();\r\n        // removing the value of selected item from variable on closing the section\r\n        dispatch(setShowStatus(null));\r\n    }\r\n\r\n\r\n    // render the section\r\n    return(\r\n        // main container\r\n        <div className=\"w-full md:w-2/3 h-full ml-1 flex flex-col p-1\">\r\n            \r\n            {/* a navbar to navigate to home page for adding a new habit to list */}\r\n            <nav className=\"w-full p-1\">\r\n                {/* link to homepage */}\r\n                <NavLink to=\"/\">\r\n\r\n                    {/* button to redirect to homepage */}\r\n                    <button className=\"bg-indigo-400 hover:bg-indigo-500 \r\n                                    float-right p-1 rounded text-white\">\r\n                        New Habit\r\n                    </button>\r\n                </NavLink>\r\n\r\n            </nav>\r\n\r\n            {/* container of status section */}\r\n            <div className=\"w-full h-full mt-1 p-1 rounded flex flex-col bg-fixed overflow-scroll\">\r\n                \r\n                {/* hidden on screen below width \"md {medium}\" */}\r\n                {/* message to select a item from habit list */}\r\n                <div className=\"hidden md:block w-full\">\r\n                    \r\n                    {/* show when user didn't click on any habit from the habit list */}\r\n                    { !showStatus?\r\n                        <h1 className=\"text-center text-2xl text-indigo-600 font-semibold\">\r\n                            {habits.length !== 0 ?\r\n                                // if list containes some items\r\n                                'Select habit from list to know your weekly status'\r\n                                :\r\n                                // incase the habit list is empty\r\n                                'Add some habits to see your progress'\r\n                            }\r\n                        </h1>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n\r\n                {/* show weekly status of a single habit when user click on habit in the list */}\r\n                {/* hidden on screen below width \"medium\" */}\r\n                <div className=\"hidden md:block w-full \">\r\n                    {   \r\n                        // if user click on a habit\r\n                        showStatus ?\r\n                            // show weekly status of task \r\n                            // passing close section function, selected habit and week days as props\r\n                            <WeekStatus handleCloseClick={handleCloseClick}\r\n                                        showStatus={showStatus}\r\n                                        weekDays={weekDays} />\r\n                            :\r\n                            null\r\n                            \r\n                    }\r\n                </div>\r\n\r\n                {/* visible only on screen below medium width */}\r\n                {/* show list of all tha habits along with their weekly status */}\r\n                <div className=\"block md:hidden w-full h-full\">\r\n\r\n                    {   \r\n                        // if user's habit list is empty\r\n                        habits.length === 0 ?\r\n                            // show following message\r\n                            <div className=\"w-full text-2xl text-center font-semibold text-indigo-600\">\r\n                                'Nothing in Your List'\r\n                            </div>\r\n                        :\r\n                        // if habit list contains some habits then render each one along with their weekly status\r\n                        habits.map((habit,i) => <WeekStatus key={i}\r\n                                                        // index of habit in the array\r\n                                                        habitIndex = {i}\r\n                                                        // handle close function\r\n                                                        handleCloseClick={handleCloseClick}\r\n                                                        // habit to show info about\r\n                                                        showStatus={habit}\r\n                                                        // array of all the week days and date\r\n                                                        weekDays={weekDays} /> )\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// export the component\r\nexport default HabitStatus;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}