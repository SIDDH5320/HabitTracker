{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDHI KUMAR\\\\OneDrive\\\\Desktop\\\\habit-tracker\\\\src\\\\Component\\\\AddHabit.js\",\n  _s = $RefreshSig$();\n// to render a form for adding a new habit \n\n// importing react hooks\nimport { useEffect, useState } from \"react\";\n\n// redux hooks\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// habitReducer actions and state\nimport { addHabit, habitSelector, setSuggestionSelected } from \"../Redux/Reducer/habitReducer\";\n\n// for toast notifications\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// render the section\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddHabit = () => {\n  _s();\n  // for calling an action\n  const dispatch = useDispatch();\n\n  // state variables of habitReducer for getting list of all the habits and to know if user clicked on a habit { in suggestion list}\n  const {\n    habits,\n    suggestionSelected\n  } = useSelector(habitSelector);\n\n  // name of habit entered inside the input tag of form\n  const [habitName, setHabitName] = useState('');\n\n  // if there is a suggestion selected by user from the list\n  useEffect(() => {\n    // store the habit's name inside the local state variable \n    if (suggestionSelected) {\n      setHabitName(suggestionSelected.habit);\n    }\n  }, [suggestionSelected]);\n\n  // when user click on add habit button / submit the form\n  const handleSubmit = e => {\n    // prevent the default action of button\n    e.preventDefault();\n\n    // getting current date to store the creation date\n    const newDate = new Date().toString();\n\n    // create an array representing seven days of weeks\n    // initialize all the value with null  ( null = pending status of habit on each day )\n    const weekStatus = Array(7).fill(null);\n\n    // structure of data to be store inside the habit list\n    const data = {\n      // id of habit { length of habit list array}\n      id: habits.length,\n      // name of habit\n      name: habitName,\n      // days on which the habit is completed { initially zero }\n      completedDays: 0,\n      // creation date\n      createdOn: `${newDate.slice(4, 15)}`,\n      // url of icon related to the selected habit\n      // if habit is selected from the suggestion list then store that icon , else provide a default habit icon\n      url: suggestionSelected ? `${suggestionSelected.url}` : 'https://freeiconshop.com/wp-content/uploads/edd/task-done-flat.png',\n      // weekly status of all the days\n      weekStatus: weekStatus\n    };\n\n    // call action to add the habit to habit list array\n    dispatch(addHabit(data));\n    // set the selected suggestion to null so that user can selected new suggestion for adding new habit\n    dispatch(setSuggestionSelected(null));\n    // set input tag's value ' '\n    setHabitName('');\n    // toast notification \n    toast.success('New Habit is Added !!');\n  };\n\n  // render the section\n  return (\n    /*#__PURE__*/\n    // main container\n    _jsxDEV(\"div\", {\n      className: \"w-full lg:w-4/5 h-1/2 bg-[#C5DFF8] rounded shadow-md \\r justify-self-end flex flex-col p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-indigo-700 text-lg font-semibold text-center mt-1\",\n        children: \"Add Habit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4/5 self-center border-t border-indigo-400\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"habit-name\",\n            className: \"font-semibold\",\n            children: \"Habit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter habit name...\"\n            // value given initially { '' or from suggestion selected} \n            ,\n            id: \"habit-name\",\n            value: habitName,\n            className: \"w-full h-8 rounded my-2 px-1 font-semibold text-indigo-800\"\n            // changing value of input on change\n            ,\n            onChange: e => setHabitName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-[#9b80fc] \\r hover:bg-indigo-500 rounded \\r shadow-md p-1 mt-2 text-white \\r font-medium float-right\",\n            children: \"ADD HABIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n// export the component \n_s(AddHabit, \"PeNnsQr08JuuNbADr+GSJa9fW14=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddHabit;\nexport default AddHabit;\nvar _c;\n$RefreshReg$(_c, \"AddHabit\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","addHabit","habitSelector","setSuggestionSelected","toast","jsxDEV","_jsxDEV","AddHabit","_s","dispatch","habits","suggestionSelected","habitName","setHabitName","habit","handleSubmit","e","preventDefault","newDate","Date","toString","weekStatus","Array","fill","data","id","length","name","completedDays","createdOn","slice","url","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/SIDDHI KUMAR/OneDrive/Desktop/habit-tracker/src/Component/AddHabit.js"],"sourcesContent":["\r\n// to render a form for adding a new habit \r\n\r\n// importing react hooks\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// redux hooks\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// habitReducer actions and state\r\nimport { addHabit, habitSelector, setSuggestionSelected } from \"../Redux/Reducer/habitReducer\";\r\n\r\n// for toast notifications\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\n// render the section\r\nconst AddHabit = () => {\r\n    // for calling an action\r\n    const dispatch = useDispatch();\r\n\r\n    // state variables of habitReducer for getting list of all the habits and to know if user clicked on a habit { in suggestion list}\r\n    const { habits,suggestionSelected } = useSelector(habitSelector);\r\n\r\n    // name of habit entered inside the input tag of form\r\n    const [habitName,setHabitName] = useState('');\r\n\r\n\r\n    // if there is a suggestion selected by user from the list\r\n    useEffect(() => {\r\n        // store the habit's name inside the local state variable \r\n        if(suggestionSelected){\r\n            setHabitName(suggestionSelected.habit);\r\n        }\r\n    },[suggestionSelected]);\r\n\r\n\r\n    // when user click on add habit button / submit the form\r\n    const handleSubmit = (e) => {\r\n        // prevent the default action of button\r\n        e.preventDefault();\r\n\r\n        // getting current date to store the creation date\r\n        const newDate =  new Date().toString();\r\n\r\n        // create an array representing seven days of weeks\r\n        // initialize all the value with null  ( null = pending status of habit on each day )\r\n        const weekStatus = Array(7).fill(null);\r\n        \r\n\r\n        // structure of data to be store inside the habit list\r\n        const data = {\r\n            // id of habit { length of habit list array}\r\n            id:habits.length,\r\n            // name of habit\r\n            name:habitName,\r\n            // days on which the habit is completed { initially zero }\r\n            completedDays:0,\r\n            // creation date\r\n            createdOn:`${newDate.slice(4,15)}`,\r\n            // url of icon related to the selected habit\r\n            // if habit is selected from the suggestion list then store that icon , else provide a default habit icon\r\n            url: suggestionSelected ? `${suggestionSelected.url}` : 'https://freeiconshop.com/wp-content/uploads/edd/task-done-flat.png',\r\n            // weekly status of all the days\r\n            weekStatus:weekStatus\r\n        };\r\n\r\n        // call action to add the habit to habit list array\r\n        dispatch(addHabit(data));\r\n        // set the selected suggestion to null so that user can selected new suggestion for adding new habit\r\n        dispatch(setSuggestionSelected(null));\r\n        // set input tag's value ' '\r\n        setHabitName('');\r\n        // toast notification \r\n        toast.success('New Habit is Added !!');\r\n    }\r\n\r\n\r\n    // render the section\r\n    return(\r\n\r\n        // main container\r\n        <div className=\"w-full lg:w-4/5 h-1/2 bg-[#C5DFF8] rounded shadow-md \r\n                        justify-self-end flex flex-col p-2\">\r\n            \r\n            {/* heading of section */}\r\n            <h1 className=\"text-indigo-700 text-lg font-semibold text-center mt-1\">\r\n                Add Habit\r\n            </h1>\r\n\r\n            {/* form container to get user's data */}\r\n            <div className=\"w-4/5 self-center border-t border-indigo-400\">\r\n                \r\n                {/* form */}\r\n                <form onSubmit={handleSubmit}>\r\n                    \r\n                    {/* label of input tag */}\r\n                    <label htmlFor=\"habit-name\"\r\n                            className=\"font-semibold\">\r\n                        Habit:\r\n                    </label>\r\n                    <br />\r\n\r\n                    {/* input tag */}\r\n                    <input type=\"text\" placeholder=\"Enter habit name...\" \r\n                            // value given initially { '' or from suggestion selected} \r\n                            id=\"habit-name\" value={habitName}\r\n                            className=\"w-full h-8 rounded my-2 px-1 font-semibold text-indigo-800\" \r\n                            // changing value of input on change\r\n                            onChange={(e) => setHabitName(e.target.value)} required />\r\n                    <br />\r\n\r\n                    {/* button to submit the form / add habit  */}\r\n                    <button type=\"submit\" className=\"bg-[#9b80fc] \r\n                                                hover:bg-indigo-500 rounded \r\n                                                shadow-md p-1 mt-2 text-white \r\n                                                font-medium float-right\">\r\n                        ADD HABIT\r\n                    </button>\r\n\r\n                </form>\r\n            \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// export the component \r\nexport default AddHabit;"],"mappings":";;AACA;;AAEA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;;AAEtD;AACA,SAASC,QAAQ,EAAEC,aAAa,EAAEC,qBAAqB,QAAQ,+BAA+B;;AAE9F;AACA,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;;AAI9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM;IAAEW,MAAM;IAACC;EAAmB,CAAC,GAAGX,WAAW,CAACE,aAAa,CAAC;;EAEhE;EACA,MAAM,CAACU,SAAS,EAACC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAG7C;EACAD,SAAS,CAAC,MAAM;IACZ;IACA,IAAGc,kBAAkB,EAAC;MAClBE,YAAY,CAACF,kBAAkB,CAACG,KAAK,CAAC;IAC1C;EACJ,CAAC,EAAC,CAACH,kBAAkB,CAAC,CAAC;;EAGvB;EACA,MAAMI,YAAY,GAAIC,CAAC,IAAK;IACxB;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,OAAO,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;;IAEtC;IACA;IACA,MAAMC,UAAU,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;;IAGtC;IACA,MAAMC,IAAI,GAAG;MACT;MACAC,EAAE,EAACf,MAAM,CAACgB,MAAM;MAChB;MACAC,IAAI,EAACf,SAAS;MACd;MACAgB,aAAa,EAAC,CAAC;MACf;MACAC,SAAS,EAAE,GAAEX,OAAO,CAACY,KAAK,CAAC,CAAC,EAAC,EAAE,CAAE,EAAC;MAClC;MACA;MACAC,GAAG,EAAEpB,kBAAkB,GAAI,GAAEA,kBAAkB,CAACoB,GAAI,EAAC,GAAG,oEAAoE;MAC5H;MACAV,UAAU,EAACA;IACf,CAAC;;IAED;IACAZ,QAAQ,CAACR,QAAQ,CAACuB,IAAI,CAAC,CAAC;IACxB;IACAf,QAAQ,CAACN,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACrC;IACAU,YAAY,CAAC,EAAE,CAAC;IAChB;IACAT,KAAK,CAAC4B,OAAO,CAAC,uBAAuB,CAAC;EAC1C,CAAC;;EAGD;EACA;IAAA;IAEI;IACA1B,OAAA;MAAK2B,SAAS,EAAC,4FACoC;MAAAC,QAAA,gBAG/C5B,OAAA;QAAI2B,SAAS,EAAC,wDAAwD;QAAAC,QAAA,EAAC;MAEvE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGLhC,OAAA;QAAK2B,SAAS,EAAC,8CAA8C;QAAAC,QAAA,eAGzD5B,OAAA;UAAMiC,QAAQ,EAAExB,YAAa;UAAAmB,QAAA,gBAGzB5B,OAAA;YAAOkC,OAAO,EAAC,YAAY;YACnBP,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAElC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRhC,OAAA;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAGNhC,OAAA;YAAOmC,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC;YACvB;YAAA;YACAjB,EAAE,EAAC,YAAY;YAACkB,KAAK,EAAE/B,SAAU;YACjCqB,SAAS,EAAC;YACV;YAAA;YACAW,QAAQ,EAAG5B,CAAC,IAAKH,YAAY,CAACG,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;YAACG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClEhC,OAAA;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAGNhC,OAAA;YAAQmC,IAAI,EAAC,QAAQ;YAACR,SAAS,EAAC,yGAGoB;YAAAC,QAAA,EAAC;UAErD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;AAEd,CAAC;;AAGD;AAAA9B,EAAA,CAhHMD,QAAQ;EAAA,QAEOR,WAAW,EAGUC,WAAW;AAAA;AAAA+C,EAAA,GAL/CxC,QAAQ;AAiHd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}